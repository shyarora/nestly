version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stayhub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: stayhub
      POSTGRES_USER: stayhub_user
      POSTGRES_PASSWORD: stayhub_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - stayhub-network

  # Redis for caching (optional, ready for future use)
  redis:
    image: redis:7-alpine
    container_name: stayhub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stayhub-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stayhub-api
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://stayhub_user:stayhub_password@postgres:5432/stayhub
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 4000
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - stayhub-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stayhub-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stayhub.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - stayhub-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  stayhub-network:
    driver: bridge
