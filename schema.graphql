# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Amenity {
  category: String!
  icon: String
  id: ID!
  name: String!
}

input CreatePropertyInput {
  address: String
  bathrooms: Float!
  bedrooms: Int!
  city: String!
  cleaningFee: Float
  country: String!
  description: String!
  latitude: Float
  longitude: Float
  maxGuests: Int!
  maximumStay: Int
  minimumStay: Int! = 1
  pricePerNight: Float!
  propertyType: String!
  roomType: String!
  serviceFee: Float
  state: String!
  title: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  createProperty(input: CreatePropertyInput!): Property!
  createUser(input: UserInput!): User!
}

type Property {
  address: String
  amenities: [Amenity!]!
  bathrooms: Float!
  bedrooms: Int!
  city: String!
  cleaningFee: Float
  country: String!
  createdAt: DateTimeISO!
  description: String!
  host: User!
  id: ID!
  images: [PropertyImage!]!
  latitude: Float
  longitude: Float
  maxGuests: Int!
  maximumStay: Int
  minimumStay: Int!
  pricePerNight: Float!
  propertyType: String!
  roomType: String!
  serviceFee: Float
  state: String!
  title: String!
  updatedAt: DateTimeISO!
}

input PropertyFilters {
  bathrooms: Float
  bedrooms: Int
  guests: Int
  limit: Int! = 20
  location: String
  maxPrice: Float
  minPrice: Float
  offset: Int! = 0
  propertyType: String
  roomType: String
  search: String
}

type PropertyImage {
  caption: String
  id: ID!
  order: Int!
  url: String!
}

type Query {
  amenities: [Amenity!]!
  properties(filters: PropertyFilters): [Property!]!
  property(id: String!): Property
  user(id: String!): User
  users: [User!]!
}

type User {
  avatar: String
  createdAt: DateTimeISO!
  email: String!
  firstName: String!
  id: ID!
  isHost: Boolean!
  isVerified: Boolean!
  lastName: String!
  updatedAt: DateTimeISO!
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}